"""Add book  tables

Revision ID: 3bfb3c3668ea
Revises: 
Create Date: 2025-01-17 20:04:58.836982

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3bfb3c3668ea'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('author',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_author'))
    )
    op.create_table('city',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('days_delivery', sa.Integer(), nullable=False),
    sa.CheckConstraint('days_delivery > 0', name=op.f('ck_city_check_days_delivery_range')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_city'))
    )
    op.create_table('ganre',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ganre'))
    )
    op.create_table('order_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('step', sa.String(length=128), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_order_status'))
    )
    op.create_table('book',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=128), nullable=False),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('genre_id', sa.Integer(), nullable=False),
    sa.CheckConstraint('amount > 0', name=op.f('ck_book_check_amount_range')),
    sa.ForeignKeyConstraint(['author_id'], ['author.id'], name=op.f('fk_book_author_id_author')),
    sa.ForeignKeyConstraint(['genre_id'], ['ganre.id'], name=op.f('fk_book_genre_id_ganre')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_book'))
    )
    op.create_table('client',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('email', sa.String(length=128), nullable=False),
    sa.Column('city_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['city_id'], ['city.id'], name=op.f('fk_client_city_id_city')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_client'))
    )
    op.create_table('purchase',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=512), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], name=op.f('fk_purchase_client_id_client')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_purchase'))
    )
    op.create_table('order_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('purchase_id', sa.Integer(), nullable=False),
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.CheckConstraint('amount > 0', name=op.f('ck_order_items_check_Order_items.amount_gt_zero')),
    sa.ForeignKeyConstraint(['book_id'], ['book.id'], name=op.f('fk_order_items_book_id_book')),
    sa.ForeignKeyConstraint(['purchase_id'], ['purchase.id'], name=op.f('fk_order_items_purchase_id_purchase')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_order_items'))
    )
    op.create_table('order_status_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_beg', sa.DateTime(), nullable=False),
    sa.Column('date_end', sa.DateTime(), nullable=False),
    sa.Column('purchase_id', sa.Integer(), nullable=False),
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.CheckConstraint("date_beg >= '2025-01-01'::date", name=op.f('ck_order_status_history_date_beg_after_2025')),
    sa.CheckConstraint('date_beg < date_end', name=op.f('ck_order_status_history_date_beg_less_than_date_end')),
    sa.ForeignKeyConstraint(['purchase_id'], ['purchase.id'], name=op.f('fk_order_status_history_purchase_id_purchase')),
    sa.ForeignKeyConstraint(['status_id'], ['order_status.id'], name=op.f('fk_order_status_history_status_id_order_status')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_order_status_history'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('order_status_history')
    op.drop_table('order_items')
    op.drop_table('purchase')
    op.drop_table('client')
    op.drop_table('book')
    op.drop_table('order_status')
    op.drop_table('ganre')
    op.drop_table('city')
    op.drop_table('author')
    # ### end Alembic commands ###
